Fast Dev Container - Lightweight Container Dev Environments
===========================================================

COMMANDS
--------

fdevc [id|name] [OPTIONS]
    Start/attach container for current directory.
    Container stops automatically on exit unless -d flag is used.
    Equivalent to: fdevc start [id|name] [OPTIONS]
    
    Arguments:
        id|name       Container id or name from fdevc ls (omit for current directory)
    
    Options:
        --dkr CMD     Docker-compatible command (docker, podman, etc.)
        -i IMAGE      Docker image name or path to Dockerfile
        -p PORTS      Port mappings (space-separated, e.g., "8080 3000:3001")
        -c CMD        Run command once on attach (not saved)
        --c-s CMD     Run command on attach and save for future sessions
        --cp ID|NAME  Copy configuration from another container
        -n BASENAME   Custom basename for container name (checks for collisions)
        -f, --force   Recreate container if arguments differ
        -d            Detach mode (persist on exit)
        --no-d        Attach mode (default)
        --tmp         Temporary mode (remove container on exit, overrides -d)
        --no-v        Skip volume mount (no project directory access)
        --no-s        Skip Docker socket mount (no nested containers)
        --no-c        Skip startup command

fdevc start [id|name] [OPTIONS]
    Explicit alias for fdevc (above)

fdevc new [OPTIONS]
    Create a new timestamped container for current directory.
    Useful for parallel isolated environments.
    
    Options:
        --dkr CMD     Docker-compatible command (docker, podman, etc.)
        -i IMAGE      Docker image name or path to Dockerfile
        -p PORTS      Port mappings (space-separated, e.g., "8080 3000:3001")
        -c CMD        Run command once on attach (not saved)
        --c-s CMD     Run command on attach and save for future sessions
        --cp ID|NAME  Copy configuration from another container
        -n BASENAME   Custom basename (no timestamp added, checks for collisions)
        -f, --force   Recreate container if arguments differ
        -d            Detach mode (persist on exit)
        --no-d        Attach mode (default)
        --tmp         Temporary mode (remove container on exit, overrides -d)
        --no-v        Skip volume mount (no project directory access)
        --no-s        Skip Docker socket mount (no nested containers)
        --no-c        Skip startup command

fdevc vm [OPTIONS]
    Create a VM-like container with no volume or socket mounts.
    Shortcut for: fdevc start --no-v --no-s
    Container name: fdevc.vm.<random-name> or fdevc.vm.<basename> with -n
    
    Options:
        --dkr CMD     Docker-compatible command (docker, podman, etc.)
        -i IMAGE      Docker image name or path to Dockerfile
        -p PORTS      Port mappings (space-separated)
        -c CMD        Run command once on attach (not saved)
        --c-s CMD     Run command on attach and save for future sessions
        --cp ID|NAME  Copy configuration from VM container
        -n BASENAME   Custom basename for VM name (creates fdevc.vm.<basename>, checks for collisions)
        -f, --force   Recreate container if arguments differ
        -d            Detach mode (persist on exit)
        --no-d        Attach mode (default)
        --tmp         Temporary mode (remove container on exit, overrides -d)
        --no-c        Ignore saved and requested startup commands

fdevc stop [id|name] [OPTIONS]
    Stop a running container without removing it.
    
    Arguments:
        id|name       Container id or name from fdevc ls (omit for current directory)
    
    Options:
        --dkr CMD     Docker-compatible command (docker, podman, etc.)

fdevc rm [id|name] [OPTIONS]
    Stop and remove a container.
    
    Arguments:
        id|name       Container id or name from fdevc ls (omit for current directory)
    
    Options:
        -f, --force   Force remove without stopping gracefully
        --all         Delete saved configuration too
        --dkr CMD     Docker-compatible command (docker, podman, etc.)

fdevc ls
    List all fdevc containers with their status and configuration.
    
    Status indicators:
        Running ●   - Container is currently running
        Stopped ○   - Container exists but is stopped
        Saved ◌     - Configuration saved but container removed

fdevc config [OPTIONS]
    Display or manage saved configurations.
    
    Options:
        (none)           Display all saved configurations in a table
        --rm             Remove all saved configurations
        --rm INDEX|NAME  Remove configuration for specific container

fdevc custom
    Copy the template Dockerfile to current directory as fdevc.Dockerfile
    This local Dockerfile will be used by default for containers in this directory.

fdevc -h, fdevc --help
    Display this help message.

CONFIGURATION
-------------

Settings are automatically saved to .fdevc_config.json in the script directory.

Local Dockerfile:
    If fdevc.Dockerfile exists in current directory, it will be used by default
    instead of the global template. Use 'fdevc custom' to create one.

Environment Variables:
    FDEVC_PYTHON     Python interpreter (default: python3)
    FDEVC_DOCKER     Container runtime (default: docker)
    FDEVC_IMAGE      Default image or Dockerfile path

TIPS
----

• Use --tmp for one-off experiments that should be cleaned up
• Use -d to keep long-running services active in background
• Use --c-s to save initialization commands for next session
• Run 'fdevc ls' to see all your containers and their indices
• Port format: "8080" maps 8080:8080, "3000:8000" maps host:container
