name: CI-CD

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: read

jobs:
  lint-bash:
    name: Check Shell Scripts 🐚
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Shellcheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: Run Shellcheck on all shell scripts
        run: |
          SHELLCHECK_FILES=(
            install
            fdevc.sh
            linter.sh
            templates/install_and_run
            templates/launch.sh
            templates/runnable.sh
          )
          shellcheck "${SHELLCHECK_FILES[@]}"

  lint-python:
    name: Check Python Code 🐍
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ruff mypy
      - name: Run ruff format check
        run: ruff format --check utils.py
      - name: Run ruff linter
        run: ruff check utils.py
      - name: Run mypy type checker
        run: mypy utils.py --strict

  test-dockerfile:
    name: Check Dockerfile 🐳
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Validate Dockerfile syntax
        run: docker buildx build --check --load=false .

  build-and-publish-docker:
    name: Build/Publish Image 🚀
    needs: [lint-bash, lint-python, test-dockerfile]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push multi-platform image 🚢
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/fdevc:latest
            ${{ vars.DOCKER_USERNAME }}/fdevc:${{ steps.version.outputs.VERSION }}
